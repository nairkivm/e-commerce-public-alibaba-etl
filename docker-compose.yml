version: '3.8'

services:
#   zookeeper:
#     image: wurstmeister/zookeeper:3.4.6
#     ports:
#       - "2181:2181"
#     networks:
#       - my_network

#   kafka:
#     image: wurstmeister/kafka:2.12-2.2.1
#     ports:
#       - "9092:9092"
#     environment:
#       KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9092
#       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
#       KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9092
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#     networks:
#       - my_network

#   airflow:
#     image: apache/airflow:2.6.1
#     environment:
#       - AIRFLOW__CORE__EXECUTOR=LocalExecutor
#       - AIRFLOW__CORE__SQL_ALCHEMY_CONN=sqlite:////usr/local/airflow/airflow.db
#       - AIRFLOW__CORE__FERNET_KEY=YOUR_FERNET_KEY
#       - AIRFLOW__CORE__LOAD_EXAMPLES=False
#     volumes:
#       - ./dags:/usr/local/airflow/dags
#       - ./logs:/usr/local/airflow/logs
#       - ./plugins:/usr/local/airflow/plugins
#     ports:
#       - "8080:8080"
#     command: >
#       bash -c "airflow db init &&
#                airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com &&
#                airflow webserver"
#     networks:
#       - my_network

  etl:
    build: .
    volumes:
      - .:/usr/src/app
    working_dir: /usr/src/app
    env_file:
      - .env
    networks:
      - my_network

networks:
  my_network:
    driver: bridge
